{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/15-us-map.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","17","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","__webpack_exports__","d3__WEBPACK_IMPORTED_MODULE_0__","w","h","projection","d3","translate","path","color","range","formatAsThousands","formatDecimals","svg","append","attr","zoom","scaleExtent","translateExtent","on","offset","transform","x","y","newScale","k","scale","selectAll","lon","lat","centroid","center","map","then","domain","json","dataState","state","dataValue","parseFloat","features","properties","enter","style","text","cities","Math","sqrt","parseInt","population","concat","place","createPanButtons","createZoomButtons","north","html","south","west","east","this","transition","translateBy","zoomIn","zoomOut","scaleFactor","scaleBy"],"mappings":"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","file":"us_map.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t17: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([34,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as d3 from 'd3';\nimport './15-us-map.css';\n\n// Width and height\nconst w = 500;\nconst h = 300;\n\n// Define path generator, using the Albers USA projection\nconst projection = d3.geoAlbersUsa().translate([0, 0]);\nconst path = d3.geoPath().projection(projection);\n\n// Define quantize scale to sort data values into buckets of color\nvar color = d3\n  .scaleQuantize()\n  .range([\n    'rgb(237,248,233)',\n    'rgb(186,228,179)',\n    'rgb(116,196,118)',\n    'rgb(49,163,84)',\n    'rgb(0,109,44)'\n  ]);\n// Colors derived from ColorBrewer, by Cynthia Brewer, and included in\n// https://github.com/d3/d3-scale-chromatic\n\n// Number formatting for population values\nconst formatAsThousands = d3.format(','); // e.g. converts 123456 to \"123,456\"\n\n// Number formatting for ag productivity values\nconst formatDecimals = d3.format('.3'); // e.g. converts 1.23456 to \"1.23\"\n\n// Create SVG element\nconst svg = d3\n  .select('body')\n  .append('svg')\n  .attr('width', w)\n  .attr('height', h);\n\n// Define what to do when panning or zooming\nconst zooming = d => {\n  // Log out d3.event.transform, so you can see all the goodies inside\n  // console.log(d3.event.transform);\n\n  // New offset array\n  const offset = [d3.event.transform.x, d3.event.transform.y];\n\n  // Calculate new scale\n  const newScale = d3.event.transform.k * 2000;\n\n  // Update projection with new offset and scale\n  projection.translate(offset).scale(newScale);\n\n  // Update all paths and circles\n  svg.selectAll('path').attr('d', path);\n  svg\n    .selectAll('circle')\n    .attr('cx', d => projection([d.lon, d.lat])[0])\n    .attr('cy', d => projection([d.lon, d.lat])[1]);\n\n  svg\n    .selectAll('.label')\n    .attr('x', d => path.centroid(d)[0])\n    .attr('y', d => path.centroid(d)[1]);\n};\n\n// Then define the zoom behavior\nconst zoom = d3\n  .zoom()\n  .scaleExtent([0.2, 2.0])\n  .translateExtent([[-1200, -700], [1200, 700]])\n  .on('zoom', zooming);\n\n// The center of the country, roughly\nconst center = projection([-97.0, 39.0]);\n\n// Create a container in which all zoom-able elements will live\nconst map = svg\n  .append('g')\n  .attr('id', 'map')\n  .call(zoom) // Bind the zoom behavior\n  .call(\n    zoom.transform,\n    d3.zoomIdentity // Then apply the initial transform\n      .translate(w / 2, h / 2)\n      .scale(0.25)\n      .translate(-center[0], -center[1])\n  );\n\n// Create a new, invisible background rect to catch zoom events\nmap\n  .append('rect')\n  .attr('x', 0)\n  .attr('y', 0)\n  .attr('width', w)\n  .attr('height', h)\n  .attr('opacity', 0);\n\n// Load in agriculture data\nd3.csv('data/us-ag-productivity.csv').then(data => {\n  // Set input domain for color scale\n  color.domain([d3.min(data, d => d.value), d3.max(data, d => d.value)]);\n\n  // Load in GeoJSON data\n  d3.json('data/us-states.json').then(json => {\n    // Merge the ag. data and GeoJSON\n    // Loop through once for each ag. data value\n    for (let i = 0; i < data.length; i++) {\n      // Grab state name\n      const dataState = data[i].state;\n\n      // Grab data value, and convert from string to float\n      const dataValue = parseFloat(data[i].value);\n\n      // Find the corresponding state inside the GeoJSON\n      for (let j = 0; j < json.features.length; j++) {\n        const jsonState = json.features[j].properties.name;\n\n        if (dataState == jsonState) {\n          // Copy the data value into the JSON\n          json.features[j].properties.value = dataValue;\n\n          // Stop looking through the JSON\n          break;\n        }\n      }\n    }\n\n    // Bind data and create one path per GeoJSON feature\n    map\n      .selectAll('path')\n      .data(json.features)\n      .enter()\n      .append('path')\n      .attr('d', path)\n      .style('fill', d => {\n        // Get data value\n        const value = d.properties.value;\n\n        if (value) {\n          // If value exists...\n          return color(value);\n        } else {\n          // If value is undefined...\n          return '#ccc';\n        }\n      });\n\n    // Create one label per state\n    map\n      .selectAll('text')\n      .data(json.features)\n      .enter()\n      .append('text')\n      .attr('class', 'label')\n      .attr('x', d => path.centroid(d)[0])\n      .attr('y', d => path.centroid(d)[1])\n      .text(d => {\n        if (d.properties.value) {\n          return formatDecimals(d.properties.value);\n        }\n      });\n\n    // Load in cities data\n    d3.csv('data/us-cities.csv').then(cities => {\n      map\n        .selectAll('circle')\n        .data(cities)\n        .enter()\n        .append('circle')\n        .attr('cx', d => projection([d.lon, d.lat])[0])\n        .attr('cy', d => projection([d.lon, d.lat])[1])\n        .attr('r', d => Math.sqrt(parseInt(d.population) * 0.00004))\n        .style('fill', 'yellow')\n        .style('stroke', 'gray')\n        .style('stroke-width', 0.25)\n        .style('opacity', 0.75)\n        .append('title') // Simple tooltip\n        .text(d => `${d.place}: Pop. ${formatAsThousands(d.population)}`);\n\n      createPanButtons();\n      createZoomButtons();\n    });\n  });\n});\n\nconst createPanButtons = () => {\n  // Create the clickable groups\n\n  // North\n  const north = svg\n    .append('g')\n    .attr('class', 'pan') // All share the 'pan' class\n    .attr('id', 'north'); // The ID will tell us which direction to head\n  north\n    .append('rect')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', w)\n    .attr('height', 30);\n  north\n    .append('text')\n    .attr('x', w / 2)\n    .attr('y', 20)\n    .html('&uarr;');\n\n  // South\n  const south = svg\n    .append('g')\n    .attr('class', 'pan')\n    .attr('id', 'south');\n  south\n    .append('rect')\n    .attr('x', 0)\n    .attr('y', h - 30)\n    .attr('width', w)\n    .attr('height', 30);\n  south\n    .append('text')\n    .attr('x', w / 2)\n    .attr('y', h - 10)\n    .html('&darr;');\n\n  // West\n  const west = svg\n    .append('g')\n    .attr('class', 'pan')\n    .attr('id', 'west');\n  west\n    .append('rect')\n    .attr('x', 0)\n    .attr('y', 30)\n    .attr('width', 30)\n    .attr('height', h - 60);\n  west\n    .append('text')\n    .attr('x', 15)\n    .attr('y', h / 2)\n    .html('&larr;');\n\n  // East\n  const east = svg\n    .append('g')\n    .attr('class', 'pan')\n    .attr('id', 'east');\n  east\n    .append('rect')\n    .attr('x', w - 30)\n    .attr('y', 30)\n    .attr('width', 30)\n    .attr('height', h - 60);\n  east\n    .append('text')\n    .attr('x', w - 15)\n    .attr('y', h / 2)\n    .html('&rarr;');\n\n  // Panning interaction\n  d3.selectAll('.pan').on('click', function() {\n    // Set how much to move on each click\n    const moveAmount = 50;\n\n    // Set x/y to zero for now\n    let x = 0;\n    let y = 0;\n\n    // Which way are we headed?\n    const direction = d3.select(this).attr('id');\n\n    // Modify the offset, depending on the direction\n    switch (direction) {\n      case 'north':\n        y += moveAmount; // Increase y offset\n        break;\n      case 'south':\n        y -= moveAmount; // Decrease y offset\n        break;\n      case 'west':\n        x += moveAmount; // Increase x offset\n        break;\n      case 'east':\n        x -= moveAmount; // Decrease x offset\n        break;\n      default:\n        break;\n    }\n\n    // This triggers a zoom event, translating by x, y\n    map.transition().call(zoom.translateBy, x, y);\n  });\n};\n\n// Create zoom buttons\nconst createZoomButtons = () => {\n  // Create the clickable groups\n  // Zoom in button\n  const zoomIn = svg\n    .append('g')\n    .attr('class', 'zoom') // All share the 'zoom' class\n    .attr('id', 'in') // The ID will tell us which direction to head\n    .attr('transform', 'translate(' + (w - 110) + ',' + (h - 70) + ')');\n  zoomIn\n    .append('rect')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', 30)\n    .attr('height', 30);\n  zoomIn\n    .append('text')\n    .attr('x', 15)\n    .attr('y', 20)\n    .text('+');\n\n  // Zoom out button\n  const zoomOut = svg\n    .append('g')\n    .attr('class', 'zoom')\n    .attr('id', 'out')\n    .attr('transform', 'translate(' + (w - 70) + ',' + (h - 70) + ')');\n  zoomOut\n    .append('rect')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', 30)\n    .attr('height', 30);\n  zoomOut\n    .append('text')\n    .attr('x', 15)\n    .attr('y', 20)\n    .html('&ndash;');\n\n  // Zooming interaction\n  d3.selectAll('.zoom').on('click', function() {\n    // Set how much to scale on each click\n    let scaleFactor;\n\n    // Which way are we headed?\n    const direction = d3.select(this).attr('id');\n\n    // Modify the k scale value, depending on the direction\n    switch (direction) {\n      case 'in':\n        scaleFactor = 1.5;\n        break;\n      case 'out':\n        scaleFactor = 0.75;\n        break;\n      default:\n        break;\n    }\n\n    // This triggers a zoom event, scaling by 'scaleFactor'\n    map.transition().call(zoom.scaleBy, scaleFactor);\n  });\n};\n\n// Bind 'Pacific Northwest' button behavior\nd3.select('#pnw').on('click', () => {\n  map.transition().call(\n    zoom.transform,\n    d3.zoomIdentity\n      .translate(w / 2, h / 2)\n      .scale(0.9)\n      .translate(600, 300)\n  );\n});\n\n// Bind 'Reset' button behavior\nd3.select('#reset').on('click', () => {\n  map.transition().call(\n    zoom.transform,\n    d3.zoomIdentity // Same as the initial transform\n      .translate(w / 2, h / 2)\n      .scale(0.25)\n      .translate(-center[0], -center[1])\n  );\n});\n"],"sourceRoot":""}